
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"'
                      ' DN=$ssl_client_s_dn'
                      ' CN=$ssl_client_s_dn_cn';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;
    resolver 127.0.0.11;

    #gzip  on;


    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Create a variable "ssl_client_s_dn_cn" that contains only the CN from the certificate
    # If there is no CN in a cert, use "UNAUTHENTICATED-USER" as the username
    # Cert structures can be pretty arbitrary so there's no guaranteed way to do something
    # useful
    map $ssl_client_s_dn $ssl_client_s_dn_cn {
        default "UNAUTHENTICATED-USER";
        # capture everything between "CN=" and the next ","
        "~CN=(.*?)(?<!\\\)," $1;
    }

    # Create a variable which contains the Organization from the certificate
    map $ssl_client_s_dn $ssl_client_s_dn_o {
        default "NO-ORGANIZATION";
        # capture everything between "O=" and the next ","
        "~O=(.*?)(?<!\\\)," $1;
    }


    include /etc/nginx/conf.d/*.conf;
}
